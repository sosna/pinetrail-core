plugins {
    id 'java-library'
    id 'com.diffplug.spotless' version '5.6.1'
    id 'info.solidsoft.pitest' version '1.5.2'
    id 'jacoco'
    id 'org.sonarqube' version '3.0'
}

repositories {
    jcenter()
}

dependencies {
    implementation 'org.slf4j:slf4j-api:1.7.30'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'nl.jqno.equalsverifier:equalsverifier:3.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testRuntimeOnly 'ch.qos.logback:logback-classic:1.2.3'
}

version = '1.0.0-SNAPSHOT'

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    configure(options) {
        options.compilerArgs << '-Xlint:all'
        options.encoding = 'UTF-8'
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'CLASS'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
            limit {
                counter = 'METHOD'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.9
            }
            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 1.0
            }
        }
    }
}
check.dependsOn jacocoTestCoverageVerification

pitest {
    targetClasses = ['io.pinesoft.trail.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    junit5PluginVersion = '0.12'
}

spotless {
    java {
        googleJavaFormat()
    }
}

sonarqube {
    properties {
        property 'sonar.projectKey', 'sosna_pinetrail-core'
        property 'sonar.organization', 'sosna'
        property 'sonar.host.url', 'https://sonarcloud.io'
    }
}

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

java {
    withJavadocJar()
    withSourcesJar()
}
